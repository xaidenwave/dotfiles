#!/usr/bin/env bash

NAME="${0##*/}"
UNDER="\e[4m"
RESET="\e[0m"
TCOLS=$(tput cols)

fgc() {
    echo "\e[38;5;${1}m"
}

bgc() {
    echo "\e[48;5;${1}m"
}

usage() {
    while IFS= read -r line; do
        echo -e "$line"
    done << EOF
Usage: $NAME [-a] [-b num] [-f num]
    -a  display all colors
    -b  display the background color escape sequence for ${UNDER}num${RESET}
    -f  display the foreground color escape sequence for ${UNDER}num${RESET}
    ${UNDER}num${RESET} should be a value from 0 to 255.
EOF
    exit 1
}

disp() {
    local c 

    echo "Basic (0 to 15):"
    for c in {0..15}; do
        echo -en "$(bgc $c)   $RESET"
    done
    printf "\n\n"

    echo "Greyscale (232 to 255):"
    for c in {232..255}; do
        echo -en "$(bgc $c)  $RESET"
    done
    printf "\n\n"

    echo "6x6x6 Cubic Palette (16 to 231): "
    local colc=0 
    local sixs=$(($TCOLS / 30)) 
    local cols=$(($sixs * 6)) 
    c=16 
 
    while [[ $c -lt 232 ]]; do 

        printf "$(bgc $c) %03d $RESET" "$c"

        ((c++))
        ((colc++))

        if [[ $colc -eq $cols ]]; then

            if [[ $((($c - 16) % 36)) -ne 0 ]]; then
                c=$(($c - ($sixs - 1) * 36))
            fi

            colc=0
            echo 

        elif [[ $(($colc % 6)) -eq 0 ]] && [[ $(($c + 30)) -lt 232 ]]; then
            ((c+=30))
        fi        
    done
    echo -e $RESET
}

if getopts ab:f: OPT; then
    case "$OPT" in
    a)
        disp
        ;;
    b|f)
        if [[ $OPTARG =~ ^[0-9]+$ && $OPTARG -ge 0 ]]; then
            [[ $OPT == "b" ]] && bgc $OPTARG
            [[ $OPT == "f" ]] && fgc $OPTARG
            exit 0
        else
            usage
        fi
        ;;
    esac
else
    usage
fi
